---
#############################
#### Cleanup sites
#############################

# Add a list of vhosts appending ".conf" to each entry of vhosts
- set_fact:
    managed_sites: |
      {% if apache2_enable_default == true %}
        {{ ( apache2_vhosts | map(attribute='name') | product(['.conf']) | map('join') | list ) + [ apache2_default_filename + '.conf' ] }}
      {% else %}
        {{ ( apache2_vhosts | map(attribute='name') | product(['.conf']) | map('join') | list ) }}
      {% endif %}

- name: Prints managed_sites
  ansible.builtin.debug:
    msg: |
      {% if apache2_enable_default == true %}
        {{ ( apache2_vhosts | map(attribute='name') | product(['.conf']) | map('join') | list ) + [ apache2_default_filename + '.conf' ] }}
      {% else %}
        {{ ( apache2_vhosts | map(attribute='name') | product(['.conf']) | map('join') | list ) }}
      {% endif %}

# Remove unmanged vhost configs left over from renaming or removing apps
# all managed configs need to be added to "managed_sites" in advance
- find:
    paths: /etc/apache2/sites-available
  register: sites_available_contents

- name: Remove unmanaged vhost config files
  file:
    path: /etc/apache2/sites-available/{{ item }}
    state: absent
  with_items: "{{ sites_available_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_sites
  
# links may differ from files, therefore we need our own find task for them
- find:
    paths: /etc/apache2/sites-enabled
    file_type: any 
  register: sites_enabled_contents

- name: Remove unmanaged vhost config links
  file:
    path: /etc/apache2/sites-enabled/{{ item }}
    state: absent
  with_items: "{{ sites_enabled_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_sites
  notify: Restart apache2

#############################
#### END
#############################

- name: Create default vhost
  ansible.builtin.template:
    src: ./templates/etc/apache2/default.conf.j2
    dest: /etc/apache2/sites-available/{{ apache2_default_filename }}.conf
    owner: root
    group: root
    mode: '0644'
  when: apache2_enable_default
  notify: Reload apache2

- name: Link default vhost
  ansible.builtin.file:
    src: /etc/apache2/sites-available/{{ apache2_default_filename }}.conf
    dest:  /etc/apache2/sites-enabled/{{ apache2_default_filename }}.conf
    owner: root
    group: root
    state: link
  when: apache2_enable_default
  notify: Reload apache2

- name: Create vhost configs
  ansible.builtin.template:
    src: ./templates/etc/apache2/vhost.conf.j2
    dest: /etc/apache2/sites-available/{{ item.name }}.conf
    owner: root
    group: root
    mode: '0644'
  loop: "{{ apache2_vhosts }}"
  notify: Reload apache2

- name: Link vhosts and reload apache2
  ansible.builtin.file:
    src: /etc/apache2/sites-available/{{ item.name }}.conf
    dest: /etc/apache2/sites-enabled/{{ item.name }}.conf
    owner: root
    group: root
    state: link
  loop: "{{ apache2_vhosts }}"
  notify: Reload apache2
