---
#########################################
#            _             _ _          #
#           | |           (_) |         #
#           | | __ ___   ___| | __      #
#       _   | |/ _` \ \ / / | |/ /      #
#      | |__| | (_| |\ V /| |   <       #
#       \____/ \__,_| \_/ |_|_|\_\      #
#                                       #
#########################################                                 

# This Ansible playbook task is responsible for cleaning up unmanaged configuration files and links in the Apache2 server.
# It performs the following steps:
# 1. Sets the fact 'managed_confs' by combining the 'apache2_confs' list with the '.conf' extension.
# 2. Finds all files in the '/etc/apache2/conf-available' directory and registers the result in 'conf_available_contents'.
# 3. Removes unmanaged conf files by iterating over the files in 'conf_available_contents' and deleting them if they are not present in 'managed_confs'.
# 4. Finds all files in the '/etc/apache2/conf-enabled' directory and registers the result in 'conf_enabled_contents'.
# 5. Removes unmanaged conf links by iterating over the files in 'conf_enabled_contents' and deleting them if they are not present in 'managed_confs'.
# 6. Notifies the 'Restart apache2' handler after removing unmanaged conf links.
# 7. Sets the fact 'managed_sites' based on the value of 'apache2_enable_default' and the 'apache2_vhosts' list.
# 8. Finds all files in the '/etc/apache2/sites-available' directory and registers the result in 'sites_available_contents'.
# 9. Removes unmanaged vhost config files by iterating over the files in 'sites_available_contents' and deleting them if they are not present in 'managed_sites'.
# 10. Finds all files in the '/etc/apache2/sites-enabled' directory and registers the result in 'sites_enabled_contents'.
# 11. Removes unmanaged vhost config links by iterating over the files in 'sites_enabled_contents' and deleting them if they are not present in 'managed_sites'.
# 12. Notifies the 'Restart apache2' handler after removing unmanaged vhost config links.

# Note: This playbook assumes the presence of variables like 'apache2_confs', 'apache2_vhosts', 'apache2_enable_default', and 'apache2_default_filename' which are not shown in this code selection.

## Cleanup unmanaged configuration files and links
- set_fact:
    managed_confs: "{{ apache2_confs | product(['conf']) | map('join', '.') }}"

- find:
    paths: /etc/apache2/conf-available
  register: conf_available_contents

- name: Remove unmanaged conf files
  file:
    path: /etc/apache2/conf-available/{{ item }}
    state: absent
  with_items: "{{ conf_available_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_confs
  
- find:
    paths: /etc/apache2/conf-enabled
    file_type: any 
  register: conf_enabled_contents

- name: Remove unmanaged conf links
  file:
    path: /etc/apache2/conf-enabled/{{ item }}
    state: absent
  with_items: "{{ conf_enabled_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_confs
  notify: Restart apache2

## Cleanup unmanaged vhost configuration files and links
- set_fact:
    managed_sites: |
      {% if apache2_enable_default == true %}
        {{ ( apache2_vhosts | map(attribute='name') | product(['.conf']) | map('join') | list ) + [ apache2_default_filename + '.conf' ] }}
      {% else %}
        {{ ( apache2_vhosts | map(attribute='name') | product(['.conf']) | map('join') | list ) }}
      {% endif %}

- find:
    paths: /etc/apache2/sites-available
  register: sites_available_contents

- name: Remove unmanaged vhost config files
  file:
    path: /etc/apache2/sites-available/{{ item }}
    state: absent
  with_items: "{{ sites_available_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_sites
  
- find:
    paths: /etc/apache2/sites-enabled
    file_type: any 
  register: sites_enabled_contents

- name: Remove unmanaged vhost config links
  file:
    path: /etc/apache2/sites-enabled/{{ item }}
    state: absent
  with_items: "{{ sites_enabled_contents.files | map(attribute='path') | map('basename') | list }}"
  when: item not in managed_sites
  notify: Restart apache2
